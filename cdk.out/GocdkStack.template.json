{
 "Resources": {
  "myUserTable73C6AE52": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "username",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "username",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "userTable"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myUserTable/Resource"
   }
  },
  "MyLambdaFunctionServiceRole313A4D46": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/MyLambdaFunction/ServiceRole/Resource"
   }
  },
  "MyLambdaFunctionServiceRoleDefaultPolicy23555F9E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "myUserTable73C6AE52",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MyLambdaFunctionServiceRoleDefaultPolicy23555F9E",
    "Roles": [
     {
      "Ref": "MyLambdaFunctionServiceRole313A4D46"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/MyLambdaFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "MyLambdaFunction67CCA873": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e7335ad111c303b126523a5e60c39b661a4a4bf13a7d04f8db3ef1b1d9c686aa.zip"
    },
    "Handler": "main",
    "Role": {
     "Fn::GetAtt": [
      "MyLambdaFunctionServiceRole313A4D46",
      "Arn"
     ]
    },
    "Runtime": "provided.al2023"
   },
   "DependsOn": [
    "MyLambdaFunctionServiceRoleDefaultPolicy23555F9E",
    "MyLambdaFunctionServiceRole313A4D46"
   ],
   "Metadata": {
    "aws:cdk:path": "GocdkStack/MyLambdaFunction/Resource",
    "aws:asset:path": "asset.e7335ad111c303b126523a5e60c39b661a4a4bf13a7d04f8db3ef1b1d9c686aa.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "myAPIGateway46A8110D": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "myAPIGateway"
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Resource"
   }
  },
  "myAPIGatewayDeployment55C77565eebe181fdcf79ac7ed8cd69520a4951d": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "myAPIGateway46A8110D"
    }
   },
   "DependsOn": [
    "myAPIGatewayloginOPTIONS6586D1B1",
    "myAPIGatewayloginPOST63694C10",
    "myAPIGatewayloginE27A638F",
    "myAPIGatewayOPTIONS93A85446",
    "myAPIGatewayprotectedGETF1006873",
    "myAPIGatewayprotectedOPTIONSFBA2AFA6",
    "myAPIGatewayprotectedFD9634AC",
    "myAPIGatewayregisterOPTIONSBC211765",
    "myAPIGatewayregisterPOST3F10DC69",
    "myAPIGatewayregisterC0B5C261"
   ],
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Deployment/Resource"
   }
  },
  "myAPIGatewayDeploymentStageprodE7F94E71": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "myAPIGatewayDeployment55C77565eebe181fdcf79ac7ed8cd69520a4951d"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": false,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "ResourcePath": "/*"
     }
    ],
    "RestApiId": {
     "Ref": "myAPIGateway46A8110D"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/DeploymentStage.prod/Resource"
   }
  },
  "myAPIGatewayOPTIONS93A85446": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,DELETE,PUT,OPTIONS'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "myAPIGateway46A8110D",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "myAPIGateway46A8110D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/OPTIONS/Resource"
   }
  },
  "myAPIGatewayregisterC0B5C261": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "myAPIGateway46A8110D",
      "RootResourceId"
     ]
    },
    "PathPart": "register",
    "RestApiId": {
     "Ref": "myAPIGateway46A8110D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/register/Resource"
   }
  },
  "myAPIGatewayregisterOPTIONSBC211765": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,DELETE,PUT,OPTIONS'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "myAPIGatewayregisterC0B5C261"
    },
    "RestApiId": {
     "Ref": "myAPIGateway46A8110D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/register/OPTIONS/Resource"
   }
  },
  "myAPIGatewayregisterPOSTApiPermissionGocdkStackmyAPIGateway61A6430EPOSTregisterDC517B90": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaFunction67CCA873",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myAPIGateway46A8110D"
       },
       "/",
       {
        "Ref": "myAPIGatewayDeploymentStageprodE7F94E71"
       },
       "/POST/register"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/register/POST/ApiPermission.GocdkStackmyAPIGateway61A6430E.POST..register"
   }
  },
  "myAPIGatewayregisterPOSTApiPermissionTestGocdkStackmyAPIGateway61A6430EPOSTregisterDDADB621": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaFunction67CCA873",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myAPIGateway46A8110D"
       },
       "/test-invoke-stage/POST/register"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/register/POST/ApiPermission.Test.GocdkStackmyAPIGateway61A6430E.POST..register"
   }
  },
  "myAPIGatewayregisterPOST3F10DC69": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MyLambdaFunction67CCA873",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "myAPIGatewayregisterC0B5C261"
    },
    "RestApiId": {
     "Ref": "myAPIGateway46A8110D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/register/POST/Resource"
   }
  },
  "myAPIGatewayloginE27A638F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "myAPIGateway46A8110D",
      "RootResourceId"
     ]
    },
    "PathPart": "login",
    "RestApiId": {
     "Ref": "myAPIGateway46A8110D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/login/Resource"
   }
  },
  "myAPIGatewayloginOPTIONS6586D1B1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,DELETE,PUT,OPTIONS'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "myAPIGatewayloginE27A638F"
    },
    "RestApiId": {
     "Ref": "myAPIGateway46A8110D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/login/OPTIONS/Resource"
   }
  },
  "myAPIGatewayloginPOSTApiPermissionGocdkStackmyAPIGateway61A6430EPOSTloginA8FBECC0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaFunction67CCA873",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myAPIGateway46A8110D"
       },
       "/",
       {
        "Ref": "myAPIGatewayDeploymentStageprodE7F94E71"
       },
       "/POST/login"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/login/POST/ApiPermission.GocdkStackmyAPIGateway61A6430E.POST..login"
   }
  },
  "myAPIGatewayloginPOSTApiPermissionTestGocdkStackmyAPIGateway61A6430EPOSTloginDF2E64F6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaFunction67CCA873",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myAPIGateway46A8110D"
       },
       "/test-invoke-stage/POST/login"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/login/POST/ApiPermission.Test.GocdkStackmyAPIGateway61A6430E.POST..login"
   }
  },
  "myAPIGatewayloginPOST63694C10": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MyLambdaFunction67CCA873",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "myAPIGatewayloginE27A638F"
    },
    "RestApiId": {
     "Ref": "myAPIGateway46A8110D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/login/POST/Resource"
   }
  },
  "myAPIGatewayprotectedFD9634AC": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "myAPIGateway46A8110D",
      "RootResourceId"
     ]
    },
    "PathPart": "protected",
    "RestApiId": {
     "Ref": "myAPIGateway46A8110D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/protected/Resource"
   }
  },
  "myAPIGatewayprotectedOPTIONSFBA2AFA6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,DELETE,PUT,OPTIONS'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "myAPIGatewayprotectedFD9634AC"
    },
    "RestApiId": {
     "Ref": "myAPIGateway46A8110D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/protected/OPTIONS/Resource"
   }
  },
  "myAPIGatewayprotectedGETApiPermissionGocdkStackmyAPIGateway61A6430EGETprotected8775D9C6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaFunction67CCA873",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myAPIGateway46A8110D"
       },
       "/",
       {
        "Ref": "myAPIGatewayDeploymentStageprodE7F94E71"
       },
       "/GET/protected"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/protected/GET/ApiPermission.GocdkStackmyAPIGateway61A6430E.GET..protected"
   }
  },
  "myAPIGatewayprotectedGETApiPermissionTestGocdkStackmyAPIGateway61A6430EGETprotectedEC0FD117": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaFunction67CCA873",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myAPIGateway46A8110D"
       },
       "/test-invoke-stage/GET/protected"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/protected/GET/ApiPermission.Test.GocdkStackmyAPIGateway61A6430E.GET..protected"
   }
  },
  "myAPIGatewayprotectedGETF1006873": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MyLambdaFunction67CCA873",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "myAPIGatewayprotectedFD9634AC"
    },
    "RestApiId": {
     "Ref": "myAPIGateway46A8110D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/myAPIGateway/Default/protected/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02PQW+DMAyFf0vvIR0w7d522m1a1e1eGeIxF5Ig4gghxH9fEpjGyZ+fX57jQuZlKZ8OMLqsVm3WUSXnT4a6FUG6z2oyoK0K4hdUHYrLt0mwiA50pUDOb97UTNbE0Z6vOGhyLnSLINByvtn1fapX21E9JV+iRbjyDs4hO3mKJfTy7OsW+QwOBfTUAOMIUwhCx6eeUtaGr9h3dtJoOKq7LpzSpK0rBL/1Q40p8x35x6o43OhvuiUnXpZ/OX0sBpFpoufDc+957458sUYRp7sbm8uikPlxJKPs6I6g1cvz4eGIssEbJo3yttZfW93bS4kBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "GocdkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "myAPIGatewayEndpoint1DD0FB9A": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "myAPIGateway46A8110D"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "myAPIGatewayDeploymentStageprodE7F94E71"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}